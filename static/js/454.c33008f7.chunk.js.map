{"version":3,"file":"static/js/454.c33008f7.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.entities;\nexport const getFilteredContacts = state => state.contacts.filter;\nexport const isLoading = state => state.contacts.isLoading;","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"ContactForm_phonebook__3VpZj\"};","\nimport { useState } from 'react';\nimport { addContactsCreate } from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\n// import { contactsOperations } from 'redux/contacts';\n// import { contactsSelectors } from 'redux/contacts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nimport styles from './ContactForm.module.css';\n\nexport default function ContactForm() {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\nconst contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n\n\n     const nameId = nanoid();\n    const numberId = nanoid();\n\n\n   const handleChangeForm = (e) => {\n        const { name, value } = e.currentTarget;\n       \n       switch (name) {\n           case \"name\":\n               setName(value);\n               break;\n           \n           case \"number\":\n               setNumber(value);\n               break;\n           default:\n               return;\n}\n    }\n\n    \n    const handleFormSubmit = e => {\n        e.preventDefault()\n\n        const addNewContact = { name, number, id: nanoid() };\n        const contactFind = contacts.find(\n            contact => name.toLocaleLowerCase() === contact.name.toLocaleLowerCase())\n            // alert(`${name} is already in contacts`)\n        \n        if (!contactFind) {\n            dispatch(addContactsCreate(addNewContact))\n            Notiflix.Notify.info('Contact created');\n              setName('')\n             setNumber('')\n        }\n        if (contactFind) {\n            Notiflix.Notify.info(`${name} is already in contacts`);\n        }\n            \n    //     if (contacts.find(\n    //         contact => name.toLocaleLowerCase() === contact.name.toLocaleLowerCase())) {\n    //         alert(`${name} is already in contacts`)\n    //     } else {\n    //         dispatch(addContactsCreate(addNewContact))\n    //           setName('')\n    //          setNumber('')\n    //   }\n}\n\n\n    return (\n        <div className={styles.phonebook}>\n            <h2>Phonebook</h2>\n            <form onSubmit={handleFormSubmit}>\n                <label htmlFor={nameId}>Name</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    id={nameId}\n                    placeholder='Enter name'\n                    value={name}\n                    onChange={handleChangeForm}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n                <br />\n                <label htmlFor={numberId}>Number</label>\n                <input\n                    type=\"tel\"\n                    id={numberId}\n                    name=\"number\"\n                    placeholder='Enter phone number'\n                    value={number}\n                    onChange={handleChangeForm}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n                <br />\n                <button\n                    type='submit'>Add contact</button>\n                <br />\n            </form>\n        </div>\n    );\n};\n\n ","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { React } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/contactsSelectors';\nimport { filter } from 'redux/contacts/contactsActions'\nimport styles from './Filter.module.css';\n\n\n\n  export const Filter = () => {\n    const dispatch = useDispatch();\n    const filterValue = useSelector(getFilteredContacts);\n\n    const inputChange = e => {\n      const changeValue = e.target.value;\n      dispatch(filter(changeValue));\n    };\n\n    return (\n      <div className={styles.filterInput}>\n    <label>Find contacts by name</label>\n    <input className={styles.filter} type=\"text\" name=\"number\" value={filterValue} onChange={inputChange} placeholder='Enter name'/>\n  </div>);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactListItem_contacts__CBDzW\"};","import { useDispatch } from 'react-redux';\nimport { removeContactsCreate } from 'redux/contacts/contactsOperations'\nimport styles from './ContactListItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ id, number, name }) => {\n  const dispatch = useDispatch();\n  \n  const removeButton = () => {\n    dispatch(removeContactsCreate(id));\n  }\n    return (\n      <div className={styles.contacts}>\n     <li key={id}>\n                  <p>\n                    <span>{name} : </span>\n            {number}\n            \n                  </p>\n                  <button type='button'\n                    onClick={removeButton}>\n                     \n                    X\n                  </button>\n            </li>\n            </div>\n  );\n};\n\nContactListItem.protoTypes = {\n  id: PropTypes.number.isRequired,\n  number: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\"};","import { MutatingDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  <MutatingDots\n    height=\"100\"\n    width=\"100\"\n    color=\"#4fa94d\"\n    secondaryColor=\"#4fa94d\"\n    radius=\"12.5\"\n    ariaLabel=\"mutating-dots-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"\"\n    visible={true}\n  />;\n};\n\nexport default Loader;","import { React } from 'react';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { useEffect } from 'react';\nimport { getContacts, getFilteredContacts, isLoading } from 'redux/contacts/contactsSelectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContactsCreate } from 'redux/contacts/contactsOperations'\nimport styles from './ContactList.module.css';\nimport Loader from 'components/Loader/Loader';\n\n\n\n\n\n\nexport const ContactList = () => { \n  const contacts = useSelector(getContacts);\n  const value = useSelector(getFilteredContacts);\n   const loading = useSelector(isLoading);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    dispatch(fetchContactsCreate());\n  }, [dispatch, contacts, value]);\n  \n   const filtersContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(value)\n    );\n  };\n  const contactsMap = value === '' ? contacts : filtersContacts();\n\n if (loading) {\n    return <Loader />;\n  }\n\n    return (\n     <div className={styles.contacts}>\n      {contactsMap.map(({ id, phone, name }) => {\n        return <ContactListItem key={id} id={id} name={name} number={phone} />;\n      })}\n    </div>\n  );\n};\n\nexport default ContactList;","import ContactForm from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport ContactList from \"components/ContactList/ContactList\";\n\nconst ContactPage = () => {\n    return (\n        <div>\n            <Filter />\n            <ContactForm />\n            <ContactList />\n        </div>\n    );\n};\n\nexport default ContactPage;"],"names":["getContacts","state","contacts","entities","getFilteredContacts","filter","isLoading","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","nameId","nanoid","numberId","handleChangeForm","e","currentTarget","value","className","styles","onSubmit","preventDefault","addNewContact","id","contactFind","find","contact","toLocaleLowerCase","addContactsCreate","Notiflix","htmlFor","type","placeholder","onChange","pattern","title","required","Filter","filterValue","changeValue","target","ContactListItem","onClick","removeContactsCreate","protoTypes","PropTypes","loading","useEffect","fetchContactsCreate","contactsMap","toLowerCase","includes","map","phone"],"sourceRoot":""}